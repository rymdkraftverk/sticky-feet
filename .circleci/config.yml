version: 2.1
commands:
  npm_install:
    parameters:
      dir:
        type: string
    steps:
      - restore_cache:
          name: "[<< parameters.dir >>] restore_cache"
          key: v2-npm-{{ checksum "<< parameters.dir >>/package-lock.json" }}
      - run:
          name: "[<< parameters.dir >>] npm ci"
          command: if [ ! -d "node_modules" ]; then npm ci; fi
          working_directory: << parameters.dir >>
      - save_cache:
          name: "[<< parameters.dir >>] save_cache"
          key: v2-npm-{{ checksum "<< parameters.dir >>/package-lock.json" }}
          paths:
          - "<< parameters.dir >>/node_modules"
  upload_website:
    parameters:
      bucket:
        type: string
      dir:
        type: string
    steps:
      - run:
          name: "[<<parameters.bucket>>] Emptying bucket"
          command: aws s3 rm s3://<<parameters.bucket>> --recursive
      - run:
          name: "[<<parameters.bucket>>] Uploading assets with long lifetime"
          command: aws s3 sync <<parameters.dir>>/ s3://<<parameters.bucket>>/ --acl public-read --cache-control max-age=31536000 --exclude index.html
      - run:
          name: "[<<parameters.bucket>>] Upload index with cache validation"
          command: aws s3 cp <<parameters.dir>>/index.html s3://<<parameters.bucket>>/ --acl public-read --cache-control no-cache
jobs:
  setup:
    docker:
      - image: node:11.11
    steps:
      - checkout
      - run:
          name: Combine timestamp and sha of last commit to create version
          command: git show -s --format="%ct-%h" > version
      - npm_install:
          dir: "."
      - npm_install:
          dir: "game"
      - npm_install:
          dir: "controller"
      - persist_to_workspace:
          paths: .
          root: .
  validate:
    docker:
      - image: node:11.11
    steps:
      - attach_workspace:
          at: .
      - run: npm test
      - run: npm run lint
      - run: npm run typecheck
  build_game:
    docker:
      - image: node:11.11
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Load version into env
          command: |
            echo 'export VERSION=`cat ../version`' >> $BASH_ENV
      - run:
          command: npm run build
          working_directory: game
      - persist_to_workspace:
          paths:
            - game/dist
          root: .
  deploy_game_itch:
    docker:
      - image: rymdkraftverk/ci:latest
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Upload to itch.io
          command: butler push game/dist rymdkraftverk/fight:web
  build_controller:
    docker:
      - image: node:11.11
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Load version into env
          command: |
            echo 'export REACT_APP_VERSION=`cat ../version`' >> $BASH_ENV
      - run:
          command: npm run build
          working_directory: controller
      - persist_to_workspace:
          paths:
            - controller/build
          root: .
  deploy_controller:
    docker:
      - image: rymdkraftverk/ci:latest
    steps:
      - attach_workspace:
          at: .
      - upload_website:
          bucket: rkv-fight-controller
          dir: controller/build
  tag:
    docker:
      - image: rymdkraftverk/ci:latest
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys
      - run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run: |
          git tag `cat version`
          git push --tags
workflows:
  default:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - master
                - develop
      - validate:
          requires:
              - setup
      - build_game:
          filters:
            branches:
              only:
                - master
          requires:
              - validate
      - build_controller:
          filters:
            branches:
              only:
                - master
          requires:
              - validate
      - deploy_controller:
          requires:
            - build_controller
      - deploy_game_itch:
          requires:
            - build_game
      - tag:
          requires:
            - deploy_controller
            - deploy_game_itch
